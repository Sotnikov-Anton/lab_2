package mephi.lab2;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.xml.stream.XMLStreamException;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;

public class JFrame_DB extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_DB
     */
    public JFrame_DB() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_createDB = new javax.swing.JButton();
        jButton_deleteDB = new javax.swing.JButton();
        jButton_regions = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_namedSpeciallyForDSSmirnov = new javax.swing.JTable();
        jButton_countries = new javax.swing.JButton();
        jButton_companies = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_createDB.setText("Create Database");
        jButton_createDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton_createDBActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButton_deleteDB.setText("Delete Database");
        jButton_deleteDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton_deleteDBActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButton_regions.setText("Calculate by regions");
        jButton_regions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton_regionsActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (XMLStreamException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jTable_namedSpeciallyForDSSmirnov.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Some union", "Объем ежегодного потребления, т."
            }
        ));
        jScrollPane1.setViewportView(jTable_namedSpeciallyForDSSmirnov);

        jButton_countries.setText("Calculate by countries");
        jButton_countries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton_countriesActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (XMLStreamException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButton_companies.setText("Calculate by companies");
        jButton_companies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton_companiesActionPerformed(evt);
                } catch (SQLException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (XMLStreamException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_regions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_countries, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_companies, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_deleteDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_createDB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButton_createDB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_deleteDB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_regions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_countries)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_companies))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String choose_file(){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("."));
        int response = fileChooser.showOpenDialog(null);
        String file = null;
        if(response == JFileChooser.APPROVE_OPTION){
            file = fileChooser.getSelectedFile().getAbsolutePath();
            System.out.println(file);
        }
        return file;
    }

    // get all necessary data from database to calculate
    public void compute_consumption(String column_name) throws SQLException, IOException, XMLStreamException {
        String file = choose_file();
        Executor executor = new Executor();
        HashMap<String, Double> region = executor.сompute(column_name, file);
        DefaultTableModel tableModel = (DefaultTableModel) jTable_namedSpeciallyForDSSmirnov.getModel();
        tableModel.setRowCount(0);
        for (String key: region.keySet()) {
            tableModel.addRow(new Object[]{key, region.get(key)});
        }
    }

    private void jButton_createDBActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButton_createDBActionPerformed
        //choosing file to get data from
        String file = choose_file();
        //reading data from excel
        ExcelProvider provider = new ExcelProvider();
        ArrayList<SQLTable> tables = provider.read_data_for_db(file);
        //connecting to a db
        DBCreator creator = new DBCreator();
        tables.forEach(b->{
            try {
                creator.createTable(b);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
            try {
                creator.fillTable(b);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        });
        creator.addForeingKey("sites", "units","id", "site" );
        creator.addForeingKey("countries","sites", "id", "place");
        creator.addForeingKey("companies", "sites","id","operator");
        creator.addForeingKey("regions", "countries", "id", "region_id");
        creator.connection_close();
        System.out.println("Fuck yeah! Database successfully created!");
    }//GEN-LAST:event_jButton_createDBActionPerformed

    private void jButton_deleteDBActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_jButton_deleteDBActionPerformed
        DBConnector db = new DBConnector();
        Connection conn = db.connection("lab_3", "antony", "HajOp0LyqBJxwsrmgN9DqpFwkBraq72e");
        Statement stmt = conn.createStatement();
        String[] tableNames = {"units", "sites", "regions", "companies", "countries"};
        for (String tableName: tableNames){
            String sql = "DROP TABLE " + tableName + " CASCADE";
            try {
                stmt.executeUpdate(sql);
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
            System.out.println("Hell yeah! Table " + tableName + " has been dropped successfully!");
        }
    }//GEN-LAST:event_jButton_deleteDBActionPerformed

    private void jButton_regionsActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, IOException, XMLStreamException {//GEN-FIRST:event_jButton_regionsActionPerformed
        compute_consumption("region_name");
    }//GEN-LAST:event_jButton_regionsActionPerformed

    private void jButton_countriesActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, IOException, XMLStreamException {//GEN-FIRST:event_jButton_countriesActionPerformed
        compute_consumption("country_name");
    }//GEN-LAST:event_jButton_countriesActionPerformed

    private void jButton_companiesActionPerformed(java.awt.event.ActionEvent evt) throws SQLException, IOException, XMLStreamException {//GEN-FIRST:event_jButton_companiesActionPerformed
        compute_consumption("companies_name");
    }//GEN-LAST:event_jButton_companiesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_DB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_DB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_DB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_DB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_DB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_companies;
    private javax.swing.JButton jButton_countries;
    private javax.swing.JButton jButton_createDB;
    private javax.swing.JButton jButton_deleteDB;
    private javax.swing.JButton jButton_regions;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_namedSpeciallyForDSSmirnov;
    // End of variables declaration//GEN-END:variables
}